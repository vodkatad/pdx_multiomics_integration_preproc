
configfile: './config'
datadir = config["PRJ_ROOT"] + config["DATA_DIR"]
srcdir = config["SRC"]
n_splits = int(config['N_SPLITS'])
split_indeces = [str(i) for i in range(n_splits)]
wildcard_constraints:
    suffix="\d+"

# map different PDx model ids
# merge drug response data, encode target variable
# split samples in train/test sets (stratified)
rule trainTest_split:
    input:
        ids = datadir+"/mapping_sanger_ID_genealogy_long.tsv",
        drug = datadir + "/drug_response/Treatments_Eugy_Ele_fix0cetuxi_201005.tsv"
    output:
        protected(expand("DrugResponse_LMXfirslevel_trainTest"+"{suffix}"+".tsv", suffix=split_indeces))
    params:
        n_splits = config['N_SPLITS'],
        testSize = config['TEST_SIZE'],
        target_col = config['TARGET_COL'],
        class_labels = config['CLASS_LABELS'],
        class_bins = config['CLASS_BINS']
    threads: 1
    script:
        srcdir+"/1_PDx_drug_response_preTrainTest.py"

# copy number data preprocessing, feature engineering
# these gain/loss thresholdsare fairly conservative for PDXs (low impurity)
# for high gain: ~.5 = 1 copy gain, ~1 = 2 copy gain
rule CN_FeatPreproc:
    input:
        response = "DrugResponse_LMXfirslevel_trainTest"+"{suffix}"+".tsv",
        cnv = datadir + "/CNA_annotation/our_cn_genes2_CNVkitREDO_25012021.tsv",
        targeted = datadir + "/targeted_intogen_common_geneset.tsv",
        TCGA_CNV = datadir + "/TCGA_COADREAD_02092020_maskedCNS_intogen_admire-gistic_genewise_CNV_mapToGene.tsv"
    output:
        preproc_CNV = "preproc_CNV" + "{suffix}" + ".tsv"
    params:
        target_col = "Cetuximab_Standard_3wks_cat",
        loss_thr = -.2, 
        gain_thr = .1,
        high_gain_thr = .75
    threads: 1  
    script:
        srcdir+"/2c_PDx_CN_GeneWise_CNVkitREDO_highCN_agglomeration.py"

