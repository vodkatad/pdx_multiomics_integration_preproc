import numpy as np
import pandas as pd

configfile: './config'
datadir = config["PRJ_ROOT"] + config["DATA_DIR"]
srcdir = config["SRC"]

# map different PDx model ids
# merge drug response data, select target
# split samples in train/test set
rule trainTest_split:
    input:
        ids = datadir+"/mapping_sanger_ID_genealogy_long.tsv",
        drug = datadir + "/drug_response/Treatments_Eugy_Ele_fix0cetuxi_201005.tsv"
    output:
        response_tab = "DrugResponse_LMXfirslevel_trainTest.tsv",
        train = "Cetuximab_3w_cat_train.tsv",
        test = "Cetuximab_3w_cat_test.tsv"
    params:
        testSize = .3,
        target_col = "Cetuximab Standard 3wks",
        class_labels = ["OR", "SD", "PD"],
        class_bins = [np.NINF, -50, 35, np.Infinity]
    script:
        srcdir+"/1_PDx_drug_response_preTrainTest.py"

# copy number feature preprocessing
# remove low variance features, colinear features
# viz CN feature importance via linearSCV loadings
rule CN_FeatClean:
    input:
        response = rules.trainTest_split.output.response_tab,
        cnv = datadir + "/CNA_annotation/our_cn_genes2_CNVkitREDO_25012021.tsv",
        targeted = datadir + "/targeted_intogen_common_geneset.tsv",
    output:
        Xtrain = "PDx_CNV_FeatSelect_Xtrain.tsv",
        Xtest = "PDx_CNV_FeatSelect_Xtest.tsv",
        loadings_fig = "PDx_CNV_FeatSelect_loadings_barplot.pdf"
    params:
        var_pctl = "25%",
        colinear_trsh = .7,
        target_col = "Cetuximab_Standard_3wks_cat"
    log:
        "CN_FeatClean.log"
    script:
        srcdir+"/2_PDx_CN_GeneWise_CNVkitREDO_MultiFeatSel.py"

# mutation data feature preprocessing
# remove colinear features, 0 var features,
# build mut combo features
# viz mut feature importance via linearSCV loadings
rule mut_FeatClean:
    input:
        response = rules.trainTest_split.output.response_tab,
        mut = datadir+"/Driver_Annotation/CodingVariants_All669PDX_samples_26Feb2020_annotated_drivers_shortVersionForPDXfinder_EK.txt"
    output:
        Xtrain = "PDx_mut_FeatSelect_Xtrain.tsv",
        Xtest = "PDx_mut_FeatSelect_Xtest.tsv",
        loadings_fig = "PDx_mut_FeatSelect_loadings_barplot.pdf"
    params:
        colinear_trsh = .7,
        target_col = "Cetuximab_Standard_3wks_cat"
    log: "mut_FeatClean.log"
    script:
        srcdir+"/2a_somatic_driver_mut_combinations.py"

# mutation VAF features preprocessing
# remove colinear features, 0 var features
# viz mut VAF feature importance via linearSCV loadings
rule mutVAF_FeatClean:
    input:
        response = rules.trainTest_split.output.response_tab,
        mut = datadir+"/Driver_Annotation/CodingVariants_All669PDX_samples_26Feb2020_annotated_drivers_shortVersionForPDXfinder_EK.txt"
    output:
        Xtrain = "PDx_mutVAF_FeatSelect_Xtrain.tsv",
        Xtest = "PDx_mutVAF_FeatSelect_Xtest.tsv",
        loadings_fig = "PDx_mutVAF_FeatSelect_loadings_barplot.pdf"
    params:
        colinear_trsh = .7,
        target_col = "Cetuximab_Standard_3wks_cat"
    log: "mutVAF_FeatClean.log"
    script:
        srcdir+"/2b_somatic_driver_mut_VAF.py"

# feature selection on variance stabilised expression data
# ANOVA fscore filter + linearSVC l1
rule expr_FeatCleanSelect:
    input:
        response = rules.trainTest_split.output.response_tab,
        expr = datadir+"/RNAseq/release_2/selected_matrix.tsv"
    output:
        Xtrain = "PDx_expr_FeatSelect_Xtrain.tsv",
        Xtest = "PDx_expr_FeatSelect_Xtest.tsv",
        boundary_fig = "PDx_expr_FeatSelect_boundary_scatterplot.pdf",
        featSelect_model = "PDx_expr_FeatSelect_lSVC.pkl",
        loadings_fig = "PDx_expr_FeatSelect_loadings_barplot.pdf"
    params:
        target_col = "Cetuximab_Standard_3wks_cat"
    log: "expr_FeatCleanSelect.log"
    threads: 8
    script:
        srcdir+"/2_PDx_DrugResponse_geneExpr_MultiFeatSelect.py"

# convert methylation data to hd5 format
rule meth_pre:
    input: 
        M_in = datadir + "/methylation/m_values_Umberto.tsv",
        colfile = datadir + "/methylation/columns.tsv"
    output:
        M_out = protected("m_values.hd5")
    run:
        import vaex
        numerical_cols = pd.read_csv(input.colfile,
                                     header=None)[0][1:].tolist()
        chunksize = 10000
        chunk_list = []
        i = 0
        for chunk in pd.read_csv(input.M_in,
                sep="\t",
                iterator=True,
                chunksize=chunksize,
                names=["probe"] + numerical_cols,
                header=None,
                skiprows=1):
            # covert to np float
            chunk[numerical_cols] = chunk[numerical_cols].apply(pd.to_numeric,
                                                                errors='coerce',
                                                                downcast='float')
            chunk["probe"] = chunk["probe"].astype(str)
            # load to vaex
            vaex_df = vaex.from_pandas(chunk, copy_index=False)
            # save chunk as hd5
            out_filename = f"m_values_{i}_tmp.hd5"
            vaex_df.export_hdf5(path=out_filename)
            i+=1
            chunk_list.append(out_filename)
            del chunk
        # load all chunks into vaex
        master_df = vaex.open_many(chunk_list)
        master_df.export_hdf5(path=output.M_out)    
        shell("rm m_values_*_tmp.hd5")

# feature selection on methylation (B) data
# ANOVA fscore filter + linearSVC l1
rule meth_FeatCleanSelect:
    input:
        response = rules.trainTest_split.output.response_tab,
        meth_m = ancient("m_values.hd5"),
        meth_B_DTpval = datadir + "/methylation/beta_DT-pvalue_Xeno.tsv",
        meth_m_sd = datadir + "/methylation/m_sdvalue.tsv"
    output:
        Xtrain = "PDx_meth_FeatSelect_Xtrain.tsv",
        Xtest = "PDx_meth_FeatSelect_Xtest.tsv",
        boundary_fig = "PDx_meth_FeatSelect_boundary_scatterplot.pdf",
        featSelect_model = "PDx_meth_FeatSelect_lSVC.pkl",
        loadings_fig = "PDx_meth_FeatSelect_loadings_barplot.pdf"
    params:
        target_col = "Cetuximab_Standard_3wks_cat",
        binom_test_FDR = .05,
        sd_pctl = "25%",
    log: "meth_FeatCleanSelect.log"
    threads: 8
    script:
        srcdir+"/2_PDx_Meth_MultiFeatSelect.py"
